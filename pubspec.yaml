name: classic_shop
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.4

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.

dependency_overrides:
  # meta: ^1.15.0
  # rxdart: ^0.28.0
  intl: ^0.20.1
  path: ^1.9.1



dependencies:
  app_set_id: ^1.2.1
  carousel_slider: ^5.0.0
  chopper: ^8.0.3
  connectivity_plus: ^6.1.0
  cupertino_icons: ^1.0.8
  custom_navigation_bar: ^0.8.2
  dart_mappable: ^4.3.0
  dartz: ^0.10.1
  device_info_plus: ^11.1.1
  extended_image: ^9.0.7
  fade_shimmer: ^2.2.0
  firebase_core: ^3.8.0
  firebase_messaging: ^15.1.5
  flash: ^3.1.1
  flex_color_scheme: ^8.0.2
  flutter:
    sdk: flutter
  flutter_animate: ^4.5.2
  flutter_form_builder: ^9.5.0
  flutter_hooks: ^0.20.5
  flutter_localizations:
    sdk: flutter
  flutter_markdown: ^0.7.4
  flutter_native_splash: ^2.4.3
  flutter_secure_storage: ^9.2.2
  flutter_slidable: ^3.1.1
  flutter_staggered_grid_view: ^0.7.0
  form_builder_validators: ^11.0.0
  freezed_annotation: ^2.4.4
  go_router: ^14.6.2
  hooks_riverpod: ^2.6.1
  http: ^1.2.2
  intl: ^0.20.1
  jovial_svg: ^1.1.24
  json_annotation: ^4.9.0
  keyboard_dismisser: ^3.0.0
  onesignal_flutter: ^5.2.8
  path: ^1.9.1
  path_provider: ^2.1.5
  pin_code_fields: ^8.0.1
  pinput: ^5.0.0
  riverpod_annotation: ^2.6.1
  rxdart: ^0.28.0
  scrollable_positioned_list: ^0.3.8
  sembast: ^3.8.0
  shared_preferences: ^2.3.3
  shimmer: ^3.0.0
  skeletonizer: ^1.4.2
  sliver_tools: ^0.2.12
  smooth_page_indicator: ^1.2.0
  # squadron: ^5.1.3
  super_sliver_list: ^0.4.1
  uuid: ^4.5.1

dev_dependencies:
  build_runner: ^2.4.13
  chopper_generator: ^8.0.3
  custom_lint: ^0.7.0
  dart_mappable_builder: ^4.3.0
  enven: ^1.0.1
  flutter_gen_runner: ^5.8.0


  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_launcher_icons: ^0.14.1
  flutter_lints: ^5.0.0
  flutter_test:
    sdk: flutter
  freezed: ^2.5.7
  json_serializable: ^6.9.0
  riverpod_generator: ^2.6.3
  riverpod_lint: ^2.6.3
  very_good_analysis: ^6.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# The following section is specific to Flutter packages.
flutter_gen:

flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  generate: true
  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/
    # - path: assets/svg/
    #   transformers:
    #     - package: vector_graphics_compiler
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware
  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages
  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Noto Kufi Arabic
      fonts:
        - asset: fonts/NotoKufiArabic-Bold.ttf
          weight: 700
        - asset: fonts/NotoKufiArabic-Medium.ttf
          weight: 500
        - asset: fonts/NotoKufiArabic-Regular.ttf
          weight: 400
        - asset: fonts/NotoKufiArabic-Thin.ttf
          weight: 100
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
